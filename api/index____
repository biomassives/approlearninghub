// /api/index.js
require('dotenv').config();
console.log('▶️ Starting API server...');
const express = require('express');
const serverless = require('serverless-http');
const cookieParser = require('cookie-parser');

// Create Express app
const app = express();

// ——— Global Middleware ————————————————————————————
app.use(express.json());
app.use(cookieParser());
app.use((req, res, next) => {
  // CORS for local testing
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type,Authorization');
  res.setHeader(
    'Content-Security-Policy',
    "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;"
  );
  if (req.method === 'OPTIONS') return res.sendStatus(200);
  next();
});

// Simple request logger
app.use((req, res, next) => {
  console.log(`${req.method} ${req.originalUrl}`);
  next();
});

// Import routers
let authRouter, contentRouter;

try {
  // Load content router
  contentRouter = require('./content');
  // Mount content router
  app.use('/content', contentRouter);
  // Special mounting for Vercel
  app.use('/api/content', contentRouter);
  console.log('✅ Content router mounted successfully');
} catch (error) {
  console.error('❌ Error loading content router:', error.message);
}

try {
  // Load auth router
  authRouter = require('./routes/auth');
  app.use('/auth', authRouter);
  app.use('/api/auth', authRouter);
  console.log('✅ Auth router mounted successfully');
} catch (error) {
  console.error('❌ Error loading auth router:', error.message);
}

// Simple health check endpoint
app.get('/health', (req, res) => {
  res.json({ 
    status: 'ok', 
    timestamp: new Date().toISOString(),
    services: {
      auth: !!authRouter,
      content: !!contentRouter
    }
  });
});

// 404 for everything else under /api
app.use('*', (req, res) => {
  console.log(`⚠️ No route found for ${req.method} ${req.originalUrl}`);
  res.status(404).json({ error: `No route for ${req.method} ${req.originalUrl}` });
});

// Global error handler
app.use((err, req, res, next) => {
  console.error('🔥 GLOBAL ERROR:', err.message);
  res.status(err.status || 500).json({
    success: false,
    error: err.message || 'Internal server error'
  });
});

module.exports = app;
module.exports.handler = serverless(app);

if (require.main === module) {
  const port = process.env.PORT || 3000;
  app.listen(port, () => {
    console.log(`🚀 Express listening on http://localhost:${port}`);
    console.log(`Auth endpoints: /api/auth/signup, /api/auth/login`);
    console.log(`Content endpoints: /api/content/featured`);
    console.log(`Health check: /health`);
  });
}